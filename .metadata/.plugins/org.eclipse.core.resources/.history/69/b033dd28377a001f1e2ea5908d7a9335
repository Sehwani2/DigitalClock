/*
 * watch.h
 *
 *  Created on: Sep 21, 2024
 *      Author: hyn02
 */

#ifndef INC_WATCH_H_
#define INC_WATCH_H_

#include "main.h"

// setting mode
typedef enum _WatchSubMode {
    WATCH_NORMAL,
    WATCH_CLOCK_SETTING
} WatchSubMode;

typedef enum WatchTimeField {
    SET_SECOND,
    SET_MINUTE,
    SET_HOUR,
    SET_DAY,
    SET_MONTH,
    SET_YEAR,
} WatchTimeField;

typedef struct _WatchStrings {
	const char* second;
	const char* minute;
	const char* hour;
	const char* day;
	const char* month;
	const char* year;
} WatchStrings;


typedef struct _WatchConfig{
	WatchTimeField WatchTime;
	WatchSubMode SubMode;
	bool NextItem;
	WatchStrings watchStrings;
}WatchConfig;



// watch
typedef struct _WatchTime{
	volatile uint16_t years;
	volatile uint8_t months;
	volatile uint8_t days;
	volatile uint8_t hours;
	volatile uint8_t minutes;
	volatile uint8_t second;
	volatile uint16_t millisecond;
}WatchTime;

typedef enum _WatchMode {
    MODE_12_HOUR,
    MODE_24_HOUR,
} WatchMode;

typedef struct _Watch{
	volatile	WatchTime Time;
	bool isLeap;
	WatchMode WatchMode;
}Watch;

extern Watch watch;
extern WatchConfig watchConfig;

#define NUM_ITEM 8

bool isLeapYear(uint16_t year);
int getDaysInMonth(Watch* watch);
void updateWatchTime(void);
void updateWatchDisplay(void);
void ClockSettingMode(void);

#endif /* INC_WATCH_H_ */
